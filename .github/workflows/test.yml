name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Compose
      uses: docker/setup-compose-action@v1
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Start test infrastructure
      run: |
        cd packages/test-infra
        docker compose up -d
        
    - name: Wait for services to be ready
      run: |
        cd packages/test-infra
        echo "Waiting for services to be healthy..."
        timeout 60 bash -c 'until docker compose exec -T postgres pg_isready -U test -d test -h localhost; do echo "Waiting for PostgreSQL..."; sleep 5; done'
        timeout 60 bash -c 'until docker compose exec -T mysql mysqladmin ping -h localhost --silent; do echo "Waiting for MySQL..."; sleep 5; done'
        timeout 60 bash -c 'until docker compose exec -T redis redis-cli ping; do echo "Waiting for Redis..."; sleep 5; done'
        timeout 120 bash -c 'until docker compose exec -T localstack awslocal sqs list-queues > /dev/null 2>&1; do echo "Waiting for LocalStack..."; sleep 5; done'
        timeout 120 bash -c 'until docker compose exec -T minio mc ready local > /dev/null 2>&1; do echo "Waiting for MinIO..."; sleep 5; done'
        echo "All services are ready!"
        
    - name: Run tests
      run: npm run test
      
    - name: Run linting
      run: npm run lint
      
    - name: Run build
      run: npm run build
      
    - name: Cleanup test infrastructure
      if: always()
      run: |
        cd packages/test-infra
        docker compose down -v
