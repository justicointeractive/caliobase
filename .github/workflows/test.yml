name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      PG_CONNECTION_STRING: "postgresql://test:test@localhost:5832/caliobase"
      MYSQL_CONNECTION_STRING: "mysql://typeormtest:typeormtest@localhost:3307/typeormtest"
      JWT_PRIVATE_KEY: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3d4WmM5OGViSXNlUUxOR1pZamlOejFzNHJNbWJjbUZRMlErend5Y214cVFpbmNLCmk4TStMQU1nQUhzZXZKTEo4cGtNV24vQ3BCOXBFNzlITisxaTJPUXIxZGpTOUZLZlJHUldleG5kdFJ1Qi9zTnMKVTV5eUZOcWV6UTU4WnozajhDUjNWMFhreXp4cDViVWFtMVNsdUpDbXh0VGNjWUtYS25Bak9LaXNJNTkwRXB4VgpHQklZOUlneTNjUjN6L0t1RXNRQ0QyZXkwbEEvVDZsTnpGb1NmMStyTjF3U1dsZkY1UjhsdlJkbnlLUWJqVmlFCnIzd0pFQXBhMnFqTnd0dTFLMHFQeWQ3L0pJdEpwVFh1cjc2cjh6YWg2bzZvVHVGdHFCNHFGbmFNYmdHa21hc3EKTnBYUlF5Uk5USEovbHhoWEpVVk93blBHMk9uTnBMODVFWTNMU3dJREFRQUJBb0lCQVFDS25la2x5cjdrcEJ5OApCdTQwQWJyY3E2NzB3SE9jZlVYMW1PSXoyTm1teHY2WEh0NE45OXUyaklhaDVlSTNQVjZHQnptWE1Ka3RXRnY4CktyNis4aWVoTlVSTTFVQmRHTS9rT0J0S3k4dHVWMWNWbGl2SFZyV1Jva0JZbmEwUW1IVUU5QlM2eHpRbVhqaE4KeXB4cmRsSzdmaUkzcFdnT255TUUrOFhYMjNPSGV0TEUwcUV3UTFnODE4d2k5TWJUMXUyV2t0UW1oWUF3YjZzQQpua0JvYUZQQUIzVW44d1pRZnFHZHprTEtMaDJjTzBYT3FhS2UxMVF2akpmZW15bTJIaTlHc1M4S2lXeUN2d2lNClZyc1ZvYmxDN0hBRmdRODZhaWwyUkw3ZDJRbHZ2aVdNVktiREpuQm5FbjZFdmZkWE1DMFB4S2ppb3pNSmxQaUUKdEo1R3YxYlJBb0dCQVB1K0lNQTNQWGJmQVVlZytEaWIxcE5QODMwQkovWmNGQUZ2dkk4aGwwUEFzV2lSZkpRRQpIRUZpb3hEeGwrNDllNTNBR1AwRUVkL0FiQ3JCS1VZVTlYZEpPOURDL1BMdU1iVXJMbkNBbXQ4ZVlmY3RnczZ5Ci9EbVJZQlZRTnJGcXJLcGdieXhLTFdlSGI2WUtpTnZBODBYLzNOVDNZUHdrV1ZoRVRyc3F2THBwQW9HQkFPTFIKL28wbDEyb1pNby9oUzNwd3BYN1ZzWUpUV05yS0h5NXF2L2VUM3Z2NUFpTnpZWUdlOFdGTHZ0a0pVT0F6blgwTgozMUszemJxZVpxOU1CVGd2ZXhkYW9PSncyK2dSNWE1R3JvTnhXaG5NaEZoMlduVWdkeTF2cGh1TDRJandZK1d5CjFtLzBqdzhMSjRYQktpOUtiMVdSNGxWNitKdlMxQ083Rkx5bzFwbVRBb0dBUmpYQ29KbEhkUzNCQjU4blczSnIKSis2MmMvaXNrcE1mcVQ3bWtlekdhVWtHc2FsUjIxNUNHeUpOWkY1ZEJ6N3lpUTZZYVlpSEM2WjVCSHVXN1VyUApJeE96c1FlUTBKZ0tHUU1RRXFScmpTckdHOC8vbVhKbDBoQnZnY0k3WHNQbm9DVUJISk1ia3JJOU8wdlkyNkUyCnVDRWlEK3RtaXl3QUZ4UUYrVUYwSFhFQ2dZRUF6bE1WU1pIMW5OYWs3c3FTM1NMZytEb3N5WTlGa1dndzZ3bEIKN0ZTL2p0ZVpBV1J3ZXZkNVBQY28rTWFIb2hweGxSTHNaWk02K2hvaThDeW54czh5R2pGZmpmdjVuZVhCMTBFRwplQnpCU0J5SSt1dFdKNXRMcmJJVkdKT3B3UWRpNTh4QlVmL1ZybXFJSGh4ellpZEVsVU1wN25YNDljM1hHVldSCmJIZnRGaThDZ1lCVHJIQ2VleGxkcTZyc1FkR3hmRSsrN0N2NHFkaXh4STNLNmxSY1dyVGczMUdhb3NMS3BleUkKd0dzcmtKYitqWnhFaTVaeWF0Y0N4VHVEVFkvMjFhWEhnbWJKdC9UQnNsSXE0YktVY2ZQL01rWjVnYTI3TGJ6TgpRUnBKUG5TOVcxN2tzazQ0WGZZTlUrRHVmVVFaRTZtMjBvUXQ3anJQRXJOb3RzelN4WUlVQmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
      JWT_PUBLIC_KEY: "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEzd3haYzk4ZWJJc2VRTE5HWllqaQpOejFzNHJNbWJjbUZRMlErend5Y214cVFpbmNLaThNK0xBTWdBSHNldkpMSjhwa01Xbi9DcEI5cEU3OUhOKzFpCjJPUXIxZGpTOUZLZlJHUldleG5kdFJ1Qi9zTnNVNXl5Rk5xZXpRNThaejNqOENSM1YwWGt5enhwNWJVYW0xU2wKdUpDbXh0VGNjWUtYS25Bak9LaXNJNTkwRXB4VkdCSVk5SWd5M2NSM3ovS3VFc1FDRDJleTBsQS9UNmxOekZvUwpmMStyTjF3U1dsZkY1UjhsdlJkbnlLUWJqVmlFcjN3SkVBcGEycWpOd3R1MUswcVB5ZDcvSkl0SnBUWHVyNzZyCjh6YWg2bzZvVHVGdHFCNHFGbmFNYmdHa21hc3FOcFhSUXlSTlRISi9seGhYSlVWT3duUEcyT25OcEw4NUVZM0wKU3dJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="
      FACEBOOK_APP_ID: "583698725979218"
      FACEBOOK_APP_SECRET: "21d4b0841f5a063720d54f89b1aba30b"
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: "testtest"
      AWS_SECRET_ACCESS_KEY: "testtest"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Compose
      uses: docker/setup-compose-action@v1
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Start test infrastructure
      run: |
        cd packages/test-infra
        docker compose up -d
        
    - name: Wait for services to be ready
      run: |
        cd packages/test-infra
        echo "Waiting for services to be healthy..."
        timeout 60 bash -c 'until docker compose exec -T postgres pg_isready -U test -d test -h localhost; do echo "Waiting for PostgreSQL..."; sleep 5; done'
        timeout 60 bash -c 'until docker compose exec -T mysql mysqladmin ping -h localhost --silent; do echo "Waiting for MySQL..."; sleep 5; done'
        timeout 60 bash -c 'until docker compose exec -T redis redis-cli ping; do echo "Waiting for Redis..."; sleep 5; done'
        timeout 120 bash -c 'until docker compose exec -T localstack awslocal sqs list-queues > /dev/null 2>&1; do echo "Waiting for LocalStack..."; sleep 5; done'
        timeout 120 bash -c 'until docker compose exec -T minio mc ready local > /dev/null 2>&1; do echo "Waiting for MinIO..."; sleep 5; done'
        echo "All services are ready!"
        
    - name: Run tests
      run: npm run test
      
    - name: Run linting
      run: npm run lint
      
    - name: Run build
      run: npm run build
      
    - name: Cleanup test infrastructure
      if: always()
      run: |
        cd packages/test-infra
        docker compose down -v
